// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UntitledSelfArticles.API.Infrastructure;

#nullable disable

namespace UntitledSelfArticles.API.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UntitledSelfArticles.API.Infrastructure.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryNodeId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryNodeId");

                    b.ToTable("Articles", (string)null);
                });

            modelBuilder.Entity("UntitledSelfArticles.API.Infrastructure.Models.Category", b =>
                {
                    b.Property<int>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NodeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NodeId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("UntitledSelfArticles.API.Infrastructure.Models.CategoryMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AncestoryCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AncestoryCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryMappings", (string)null);
                });

            modelBuilder.Entity("UntitledSelfArticles.API.Infrastructure.Models.Article", b =>
                {
                    b.HasOne("UntitledSelfArticles.API.Infrastructure.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("UntitledSelfArticles.API.Infrastructure.Models.CategoryMapping", b =>
                {
                    b.HasOne("UntitledSelfArticles.API.Infrastructure.Models.Category", "AncestorCategory")
                        .WithMany("CategoryMappings")
                        .HasForeignKey("AncestoryCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UntitledSelfArticles.API.Infrastructure.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AncestorCategory");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("UntitledSelfArticles.API.Infrastructure.Models.Category", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("CategoryMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
